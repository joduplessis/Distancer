{"version":3,"file":"distancer.js","sources":["../src/Distancer.ts"],"sourcesContent":["\nexport interface origin {\n    lat: number;\n    lon: number;\n}\n\nexport interface destination {\n    lat: number;\n    lon: number;\n}\n\nexport class Distancer  {\n\n    private metric: string = \"K\"\n    private originPoint: origin;\n    private destinationPoint: destination;\n\n    public setOrigin(o: origin): void {\n        this.originPoint = o;\n    }\n\n    public setDestination(d: destination): void {\n        this.destinationPoint = d;\n    }\n\n    public setMetric(m: string): void {\n        this.metric = m;\n    }\n\n    public calculateDistance(): number {\n\n        // Set up the variables we use for the calculation\n        const lat1: number = this.originPoint.lat;\n        const lon1: number = this.originPoint.lon;\n        const lat2: number = this.destinationPoint.lat;\n        const lon2: number = this.destinationPoint.lon;\n        const unit: string = this.metric;\n        const theta: number = lon1 - lon2;\n\n        // Do the sin/cos calculation\n        let dist: number = Math.sin(this.deg2rad(lat1)) * Math.sin(this.deg2rad(lat2)) + Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * Math.cos(this.deg2rad(theta));\n\n        // Some Math\n        dist = Math.acos(dist);\n        dist = this.rad2deg(dist);\n        dist = dist * 60 * 1.1515;\n\n        // Do the unit\n        if (unit == \"K\") {\n            dist = dist * 1.609344;\n        } else if (unit == \"M\") {\n            dist = dist * 0.8684;\n        }\n\n        // Return the distance\n        return dist;\n    }\n\n    private deg2rad(deg: number) {\n        return (deg * Math.PI / 180.0);\n    }\n\n    private rad2deg(rad: number) {\n        return (rad * 180.0 / Math.PI);\n    }\n}\n"],"names":["setOrigin","o","originPoint","setDestination","d","destinationPoint","setMetric","m","metric","calculateDistance","lat1","this","lat","lon1","lon","lat2","lon2","unit","theta","dist","Math","sin","deg2rad","cos","acos","rad2deg","deg","PI","rad"],"mappings":"yNAa6B,iBAIlBA,mBAAUC,QACRC,YAAcD,eAGhBE,wBAAeC,QACbC,iBAAmBD,eAGrBE,mBAAUC,QACRC,OAASD,eAGXE,iCAGGC,EAAeC,KAAKT,YAAYU,IAChCC,EAAeF,KAAKT,YAAYY,IAChCC,EAAeJ,KAAKN,iBAAiBO,IACrCI,EAAeL,KAAKN,iBAAiBS,IACrCG,EAAeN,KAAKH,OACpBU,EAAgBL,EAAOG,EAGzBG,EAAeC,KAAKC,IAAIV,KAAKW,QAAQZ,IAASU,KAAKC,IAAIV,KAAKW,QAAQP,IAASK,KAAKG,IAAIZ,KAAKW,QAAQZ,IAASU,KAAKG,IAAIZ,KAAKW,QAAQP,IAASK,KAAKG,IAAIZ,KAAKW,QAAQJ,aAG9JE,KAAKI,KAAKL,KAEH,MADPR,KAAKc,QAAQN,IACD,OAGP,KAARF,KACc,SACC,KAARA,OACO,OAIXE,eAGHG,iBAAQI,UACJA,EAAMN,KAAKO,GAAK,iBAGpBF,iBAAQG,UACE,IAANA,EAAcR,KAAKO"}